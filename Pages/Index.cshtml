@page
@using Scorekeeper.Models;
@model IndexModel
@{
    ViewData["Title"] = "Home page";

    const int SCOREBOARDS_PER_ROW = 3;
    const int MAX_TEAMS_PER_THUMBNAIL = 4;

    List<string> addedUsers = new List<string>();
}
<div class="text-center">
    @if ((!User.Identity?.IsAuthenticated) ?? false)
    {
        <h1 class="display-4">Welcome!</h1>
        <p><a asp-area="Identity" asp-page="/Account/Login">Login</a> to view your scoreboards or <a asp-area="Identity" asp-page="/Account/Register">register</a> if you are a new user.</p>
    }
    else
    {
        <div class="container-fluid">
            <div class="row">
                <div class="col">
                    <button id="add-scoreboard-btn">
                        <p>Create Scoreboard</p>
                    </button>
                </div>
            </div>

            @for (int i = 0; i < Model.Scoreboards.Count; i++)
            {
                var scoreboard = Model.Scoreboards[i];

                // Open a new row if we're at the start of the row
                if (i % SCOREBOARDS_PER_ROW == 0)
                {
                    @:<div class="row">
                }

                <div class="col-4">
                    <form method="post" asp-page-handler="RedirectToScoreboard" asp-route-id="@scoreboard.Id">
                    <button class="invisible-btn-wrapper">
                        <!-- Scoreboard Thumbnail -->
                        <div class="container-fluid thumbnail-container">
                            <!-- Header -->
                            <div class="row">
                                <div class="col-12 thumbnail-title">
                                    @scoreboard.Name
                                </div>
                            </div>
                            <!-- Body -->
                            <div class="row">            
                                @for (int j = 0; j < scoreboard.Teams.Count; j++)
                                {
                                    @if (j < MAX_TEAMS_PER_THUMBNAIL - 1)
                                    {
                                        var team = scoreboard.Teams.ToList()[j];
                                        <div class="col thumbnail-score-container" style="background-color: @(Team.TeamColorLookup[new Team.TeamColorInfo((Team.ColorName)team.Color, Team.ColorMode.Light)]); color:@(team.Color == (int)Team.ColorName.Black ? Html.Raw("#FFFFFF") : Html.Raw("#000000"))">
                                            <p>@team.Score</p>
                                        </div>
                                    }
                                }
                                @if (scoreboard.Teams.Count > MAX_TEAMS_PER_THUMBNAIL)
                                {
                                    <div class="col thumbnail-score-container thumbnail-more-teams-container" style="background-color: @(Team.TeamColorLookup[new Team.TeamColorInfo(Team.ColorName.White, Team.ColorMode.Light)]);">
                                        +@(scoreboard.Teams.Count - MAX_TEAMS_PER_THUMBNAIL + 1) more...
                                    </div>
                                }
                                @if (scoreboard.Teams.Count < 1)
                                {
                                    <div class="col thumbnail-score-container" style="background-color: @(Team.TeamColorLookup[new Team.TeamColorInfo(Team.ColorName.White, Team.ColorMode.Light)]);">
                                        <p><i>No Teams</i></p>
                                    </div>
                                }
                            </div>
                        </div>
                        </button>
                    </form>
                </div>

                // Close the row if we're at the end of the row or the end of the list
                if (i % SCOREBOARDS_PER_ROW == SCOREBOARDS_PER_ROW - 1 || i == Model.Scoreboards.Count - 1)
                {
                    @:</div>
                }
            }
        </div>

        <!-- CREATE SCOREBOARD FORM -->
        <div class="form-container text-center" id="create-form">
            <form method="post" class="form-popup">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <!-- NAME -->
                <div class="form-group">
                    <label asp-for="NewName" class="control-label">Scoreboard Title</label>
                    <input asp-for="NewName" class="form-control" />
                    <span asp-validation-for="NewName" class="text-danger"></span>
                </div>
                <br>
                <div class="form-group">
                    <table id="add-users-table">
                        <!-- New users are added here -->
                    </table>
                    <input type="button" id="add-user-btn" value="Add User">
                </div>
                <br />
                <!-- Submit/Cancel Buttons -->
                <div class="form-group">
                    <input type="submit" value="Submit" asp-page-handler="Create" class="btn btn-primary" />
                    <input type="button" value="Cancel" class="btn btn-outline-danger" id="add-scoreboard-cancel-btn" />
                </div>
            </form>
        </div>
    }
</div>